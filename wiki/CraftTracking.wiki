#summary Entity tracking algorithm

This stuff is work-in-progress. I'd like to make it more generic and define it functionally, perhaps with an implementation in Scala.

A design for a Entity Tracking Engine (ETE).

==Assumptions and Definitions==

  # An *entity* has position that may change with time. Examples are vessels, aircraft, vehicles, gps units.
  # An entity has at least one *identifier* which uniquely identifies the _entity_ at any one instant.
  # A *fix* has time, latitude, longitude,a set of _identifiers_, and ancillary data
  # The *source* is the originating agent of a _fix_.
  # _Identifiers_ are ranked in terms of their reliability. The MMSI number of a vessel changes over time (e.g on change of ownership the owner may reregister the vessel) so it is considered <b>weaker</b> than IMO Number which does not change over time. In this case the <i>rank</i> of IMO Number would be have a <b>higher</b> _rank_  than the _rank_ of MMSI number. 
  # The *primary identifier* for an _entity_ or a _fix_ is the highest ranked _identifier_. If more than one _identifier_ of the highest _rank_ for the _entity_ exist then a deterministic ordering is applied (use the alphabetical order of the identifier name).
  # A *secondary identifier* for an _entity_ or a _fix_ is an _identifier_ other than the _primary identifier_
  # A list of *ordered identifiers* is a list of _identifiers_ ordered by descending _rank_ then alphabetical _identifier_ name.
  # Craft _A_ is considered *stronger* than Craft _B_ if the <i>primary identifier</i> for craft _A_ is stronger than the <i>primary identifier</i> for craft _B_
  # The *matching identifier* for a _fix_ is the first (in descending _rank_) _identifier_ that matches a craft
  # The *primary craft* for a fix is the craft which has the _primary identifier_ of the fix.
  # The *craft type* is the category of the craft.
  
==Principles==
  # An identifier is associated with one and only one craft at any one time.
  # If the _primary craft_ does not exist for a fix then create a craft with the _primary identifier_ and associate the fix to that craft.
  # A secondary fix identifier matching another craft will <i>migrate</i> to the primary craft if the primary craft is <i>stronger</i> than the other craft.
  # If a migrating fix identifier is the primary identifier of another craft then the two craft are merged into the primary craft provided that
    * The nominated maximum speed for the fix craft type does not exist OR
      # the calculated average speed to move from the latest existing primary craft fix to the current fix position is less than a nominated maximum (where specified) for the craft type (e.g. 50 knots for a vessel).
      # the time difference between the two fixes is &gt;= N seconds (for all craft types). N should be configurable. N=60s seems reasonable.
  # If the merge condition is not satisfied then discard identifiers from the fix that relate to the primary craft and associate the fix with the secondary craft. 
  # if a fix already exists in terms of craft type, source, latitude, longitude and time and identity (only one common identifier needed) then it is ignored. 

C = set of craft
id: C -> 

==Algorithm==

This is the action taken when a new fix arrives to ETE:
{{{
if fix exists already then
  exit
find the primary craft from the fix identifiers
if primary craft not found then create primary craft
associate fix with primary craft
for each fix identifier
    if the identifier is not the primary identifier on the primary craft then
        if the identifier is on another craft then
            if the identifier is the primary identifier on another craft then
                if merge condition satisfied or [release is 4.6] then
                    //merge
                    move all identifiers and craft associations from the other craft to the primary craft.
                      if there is a conflict on an identifier type then the identifier is retained on
                      the primary craft and removed from the other craft
                    delete the other craft
                else
                    ignore identifiers matching the primary craft from the current fix
                    associate the fix with the secondary craft
                end if
            else //identifier is secondary
                if the primary craft is stronger than or of the same strength as the other craft then
                    move the identifier to the primary craft
                end if
            end if
            if the identifier type is on the primary craft
                update primary craft with fix identifier value
            end if
        else if the identifier type is on the primary craft
            update primary craft with fix identifier value
        else
            add the new craft identity from the fix identifier to the primary craft
        end if
    endif
end for
}}}